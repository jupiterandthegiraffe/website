class PgDmCssVariable{constructor(s,e,i){this.name=s,this.value=e,this.type=i,this.rule=null,this.node=null}}class PgDmCssVariableColor extends PgDmCssVariable{constructor(s,e){super(s,e,"color")}}class PgDmCssVariableFont extends PgDmCssVariable{constructor(s,e){super(s,e,"font")}}class PgDmCssVariableSize extends PgDmCssVariable{constructor(s,e){super(s,e,"size")}}class PgDmCssVariablesFinder{constructor(s){this.cs=s,this.list=[],this.sass_mode=!1,this.map={}}findVariables(){var s=new CrsaProfile("Search for CSS vars");return this.findVariablesInCs(this.cs),s.show("Done"),console.log(this.list),this.list}add(s,e,i){var t;this.map[s]||((t=new PgDmCssVariableSize(s,e)).rule=pgcssh.getRuleForNode(i),t.node=i,this.list.push(t),this.map[s]=t)}findVariablesInCs(e){const i=this;pgcssh.forAllNodes(e.getRootNode(),function(s){"decl"!==s.type||i.sass_mode||s.prop&&s.prop.startsWith("--")&&i.add(s.prop,s.value,s)}),this.cs.forEachStylesheet(function(s){e!==s&&i.findVariablesInCs(s)})}}var PgQuickDmCssVariablesTree=function(s){var e=new PgCSSTreeView,i=new PgQuickWindow("CSS Tree",e,"quickCssVariablesTree",400,700);i.noRightEdge(),i.showAtPosition(800,0),e.show(s),i.onDestroy=function(){}};