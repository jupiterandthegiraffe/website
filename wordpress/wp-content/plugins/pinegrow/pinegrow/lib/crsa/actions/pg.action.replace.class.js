class PgActionReplaceClass extends PgAction{static key="replace-class";static action_name="Replace classes";static description="Replaces searched classes with new classes";static allowed_parents=[PgActionFind];constructor(e,t){super(e,t);this.addFieldToSection("new_class","With class","text","List one or more new classes, separated by spaces or commas.",{placeholder:"new-class1, new-class2",aaaoptions:function(){return pinegrow.insight.getClassesForPage(pinegrow.getSelectedPage(),!0)},validate:function(e,t,s){if(!s)return"One or more new classes are required"}})}doesSubActionRequireParentField(e,t){if("classes"===e&&!t)return"Search by classes that you wish to replace."}isInFind(){return this.parent_action&&this.parent_action instanceof PgActionFind}getClassesToFind(){return this.isInFind()?this.parent_action.findGetFilterClasses():null}isCaseSensitive(){return this.isInFind()&&this.parent_action.findIsCaseSensitive()}willActionBeDoneOnPgel(e){return this.replaceClasses(e,!0)}replaceClasses(s,e){let n=this.getClassesToFind();if(n){var i=this.isCaseSensitive();let t=s.getClasses();i&&(n=n.map(e=>e.toLowerCase()),t=t.map(e=>e.toLowerCase()));for(var a=0;a<n.length;a++)if(!t.includes(n[a]))return!1;if(!e){for(var r=this.getArg("new_class",!0),a=0;a<n.length;a++){let e=n[a];i&&(e=s.getClasses()[t.indexOf(e)]),s.removeClass(e)}r&&r.forEach(function(e){s.addClass(e)})}return!0}return!1}async doActionOnPgel(e){return this.replaceClasses(e,!1)}}class PgActionDeleteClass extends PgAction{static key="delete-class";static action_name="Delete classes";static description="Deletes searched classes with new classes";static allowed_parents=[PgActionFind];constructor(e,t){super(e,t);this.addFieldToSection("label","Searched classes will be removed from the matched elements.","displayhtml",null,{})}isInFind(){return this.parent_action&&this.parent_action instanceof PgActionFind}getClassesToFind(){return this.isInFind()?this.parent_action.findGetFilterClasses():null}doesSubActionRequireParentField(e,t){if("classes"===e&&!t)return"Search by classes that you wish to delete."}isCaseSensitive(){return this.isInFind()&&this.parent_action.findIsCaseSensitive()}willActionBeDoneOnPgel(e){return this.replaceClasses(e,!0)}replaceClasses(s,e){let n=this.getClassesToFind();if(n){var i=this.isCaseSensitive();let t=s.getClasses();i&&(n=n.map(e=>e.toLowerCase()),t=t.map(e=>e.toLowerCase()));for(var a=0;a<n.length;a++)if(!t.includes(n[a]))return!1;if(!e)for(a=0;a<n.length;a++){let e=n[a];i&&(e=s.getClasses()[t.indexOf(e)]),s.removeClass(e)}return!0}return!1}async doActionOnPgel(e){return this.replaceClasses(e,!1)}}class PgActionReplaceText extends PgAction{static key="replace-text";static action_name="Replace text";static description="Replaces text content.";static allowed_parents=[PgActionFind];constructor(e,t){super(e,t);this.addFieldToSection("new_text","New text","text","Specify the new text. Leave blank to delete the text.",{placeholder:"New text. Leave blank to delete.",required:!1})}isInFind(){return this.parent_action&&this.parent_action instanceof PgActionFind}doesSubActionRequireParentField(e,t){if("text_content"===e&&!t)return"Search by text that you wish to replace."}getTextToFind(){return this.isInFind()?this.parent_action.findGetFilterText():null}isCaseSensitive(){return this.isInFind()&&this.parent_action.findIsCaseSensitive()}willActionBeDoneOnPgel(e){return this.replaceText(e,!0)}replaceText(e,t){let s=this.getTextToFind();var n,i=this.isCaseSensitive();return null!==s&&""!==s&&(n=e.text(void 0,!0),i||(s=s.toLowerCase(),n=n.toLowerCase()),t?0<=n.indexOf(s):e.replaceText(s,this.getArg("new_text")||"",i))}async doActionOnPgel(e){return this.replaceText(e,!1)}}class PgActionTransformWithAI extends PgAction{static key="transform-ai";static action_name="Transform with AI Assistant";static description="Transform the element with AI Assistant.";static allowed_parents=[PgActionFind];constructor(e,t){super(e,t),this.addFieldToSection("prompt","Prompt","text","Tell the AI Assistant what to do.",{textarea:!0,required:!0}),this.addFieldToSection("button","Select command...","button","Select a preset or a learned command.",{func:function(e,t){pinegrow.pineCone.showMenuOfActions(pgel,t)}})}willActionBeDoneOnPgel(e){return!0}async doActionOnPgel(e){var t=pinegrow.pineCone.getCommand(e,this.getArg("prompt"),"transform");return t.skip_did_change=!0,await pinegrow.pineCone.run(t),!0}}class PgActionAddClass extends PgAction{static key="add-classes";static action_name="Add Classes";static description="Adds one or more classes to the selected elements.";static allowed_parents=[PgActionFind];constructor(e,t){super(e,t);this.addFieldToSection("classes_to_add","Add classes","text","Specify one or more classes to add (comma or space separated).",{placeholder:"my-class1, my-class2",required:!0})}getClassesToAdd(){var e=this.getArg("classes_to_add");return e?e.split(/[\s,]+/).filter(Boolean):null}willActionBeDoneOnPgel(e){return!0}addClasses(t,e){var s=this.getClassesToAdd();return!!s&&(e||s.forEach(e=>{t.addClass(e)}),!0)}async doActionOnPgel(e){return this.addClasses(e,!1)}}withPinegrow(function(){pinegrow.addEventHandler("on_register_actions",function(e,t){t.registerAction(PgActionAddClass),t.registerAction(PgActionReplaceClass),t.registerAction(PgActionDeleteClass),t.registerAction(PgActionReplaceText),t.registerAction(PgActionTransformWithAI)})});